#
# spec file for package rubygem-<%= spec.name %>
#
# Copyright (c) <%= Time.now.year %> SUSE LINUX Products GmbH, Nuernberg, Germany.
#
# All modifications and additions to the file contributed by third parties
# remain the property of their copyright owners, unless otherwise agreed
# upon. The license for this file, and modifications and additions to the
# file, is the same license as for the pristine package itself (unless the
# license for the pristine package is not an Open Source License, in which
# case the license is the MIT License). An "Open Source License" is a
# license that conforms to the Open Source Definition (Version 1.9)
# published by the Open Source Initiative.

# Please submit bugfixes or comments via http://bugs.opensuse.org/
#

# norootforbuild
Name:           rubygem-<%= spec.name %>
Version:        <%= spec.version %>
Release:        0
%define mod_name <%= spec.name %>
%define mod_full_name %{mod_name}-%{version}
#
Group:          Development/Languages/Ruby
<% if spec.respond_to?(:license) && spec.license %>
License:        <%= spec.license.respond_to?(:join) ? spec.license.join(" or ") : spec.license %>
<% else %>
#FIXME cannot obtain license from gem, need manual digging
License:
<% end %>
#
BuildRoot:      %{_tmppath}/%{name}-%{version}-build
BuildRequires:  rubygems_with_buildroot_patch
%rubygems_requires
<%
# no need to add a requires ruby >= 0 here. will be pulled in via rubygems already
# we use Gem::Version.new(1) as ruby 1.0 wouldnt be able to run rubygems anyway
  unless spec.required_ruby_version.satisfied_by?(Gem::Version.new(1))
%>
Requires:       ruby <%= spec.required_ruby_version.to_rpm %>
BuildRequires:  ruby-devel <%= spec.required_ruby_version.to_rpm %>
<% end %>
<% for d in spec.dependencies %>
<% if d.type != :development %>
<% d.requirement.requirements.each do |op, version| %>
# <%= d.name %> <%= "#{op} #{version}" %>
<% for req in Gem::Requirement.rpm_version_transform_opensuse("rubygem-#{d.name}", op, version) %>
BuildRequires:  <%= req %>
Requires:       <%= req %>
<% end %>
<% end %>
<% end %>
<% end %>
#
Url:            <%= spec.homepage %>
Source:         %{mod_full_name}.gem
#
Summary:        <%= spec.summary.gsub(/\.$/, "") %>
%description
<%= spec.description.to_s.chomp + "\n" %>

<% if spec.has_rdoc %>
%package doc
Summary:        RDoc documentation for %{mod_name}
Group:          Development/Languages/Ruby
Requires:       %{name} = %{version}
%description doc
Documentation generated at gem installation time.
Usually in RDoc and RI formats.

<% end %>
<% test_frameworks = %w(test spec).select { |framework| format.file_entries.any? { |entry, data| path = entry['path'] ; path.index(framework + "/") == 0 } } %>
<% unless test_frameworks.empty? %>
%package testsuite
Summary:        Test suite for %{mod_name}
Group:          Development/Languages/Ruby
Requires:       %{name} = %{version}
%description testsuite
Test::Unit or RSpec files, useful for developers.

<% end %>
%prep
%build
%install
%gem_install %{S:0}
<% unless spec.extensions.empty? %>
%gem_cleanup
<% end %>

%clean
%{__rm} -rf %{buildroot}

%files
%defattr(-,root,root,-)
<% spec.executables.each do |executable| %>
%{_bindir}/<%= executable %>
<% end %>
%{_libdir}/ruby/gems/%{rb_ver}/cache/%{mod_full_name}.gem
%{_libdir}/ruby/gems/%{rb_ver}/gems/%{mod_full_name}/
<% test_frameworks.each do |framework| %>
%exclude %{_libdir}/ruby/gems/%{rb_ver}/gems/%{mod_full_name}/<%= framework %>
<% end %>
%{_libdir}/ruby/gems/%{rb_ver}/specifications/%{mod_full_name}.gemspec

<% if spec.has_rdoc %>
%files doc
%defattr(-,root,root,-)
%doc %{_libdir}/ruby/gems/%{rb_ver}/doc/%{mod_full_name}/

<% end %>
<% unless test_frameworks.empty? %>
%files testsuite
%defattr(-,root,root,-)
<%   test_frameworks.each do |framework| %>
%{_libdir}/ruby/gems/%{rb_ver}/gems/%{mod_full_name}/<%= framework %>
<%   end %>

<% end %>
%changelog
